
fun map(_fn, xs) { 
	fun map__(ys, res) {
		if (len(ys) == 0) {
			return res;
		}
		var got_got = _fn(head(ys));
		return map__(tail(ys), append(got_got, res));
	}

	return map__(xs, List());
}


fun filter(_fn, xs) {
	fun filter__(ys, res) {
		if (len(ys) == 0) {
			return res;
		}

		var predicate = _fn(head(ys));

		if (predicate) 
			return filter__(tail(ys), append(head(ys), res));
		else 
			return filter__(tail(ys), res);
	}

	return filter__(xs, List());
}



/* TODO(tyler): a function with no parameters 
 * crashes when called. */
fun main(a) {

	var a = List(1,2,3);
	print(a);

	fun square(n) {return n * n; }

	var b = map(square, a);
	print(b);

	fun large_number(n) {
		/* TODO(tyler): shouldn't have to 
		 * explicitly return here. */
		if (n > 2)  { return true ; }
		else        { return false ;}
	}

	var c = filter(large_number, b);
	print(c);
}

main(1);
